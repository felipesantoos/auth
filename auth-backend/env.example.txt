# ===========================================
# Auth System API - Environment Variables
# ===========================================

# Application Settings
APP_NAME="Auth System API"
APP_VERSION="1.0.0"
ENVIRONMENT="development"
DEBUG=true
LOG_LEVEL="INFO"

# API Configuration
API_HOST="0.0.0.0"
API_PORT=8080
CORS_ORIGINS="http://localhost:5173,http://localhost:3000"

# Database (PostgreSQL)
DATABASE_URL="postgresql+asyncpg://postgres:postgres@localhost:5432/auth_system"
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# Redis
REDIS_HOST="localhost"
REDIS_PORT=6379
REDIS_PASSWORD=""
REDIS_DB=0

# JWT Authentication
JWT_SECRET="change-this-to-a-strong-random-secret-key-min-32-chars"
JWT_ALGORITHM="HS256"
JWT_AUDIENCE="auth-system-api"
JWT_ISSUER="auth-system-api"
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# Default Admin User
DEFAULT_ADMIN_EMAIL="admin@authsystem.com"
DEFAULT_ADMIN_PASSWORD="admin123"
DEFAULT_ADMIN_NAME="Administrator"

# Pagination
DEFAULT_PAGE_SIZE=20
MAX_PAGE_SIZE=100

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
LOGIN_RATE_LIMIT_PER_MINUTE=5

# ===========================================
# Email Service Configuration
# ===========================================
# Email Backend: smtp, console, sendgrid, ses, mailgun
# - smtp: Send via SMTP server (Gmail, custom SMTP)
# - console: Print to console (development only)
# - sendgrid: Use SendGrid API
# - ses: Use AWS SES
# - mailgun: Use Mailgun API
EMAIL_BACKEND=console
EMAIL_TEMPLATES_DIR=templates/emails
EMAIL_TRACKING_ENABLED=true

# SMTP Configuration (for EMAIL_BACKEND=smtp)
SMTP_HOST="smtp.gmail.com"
SMTP_PORT=587
SMTP_USER="your-email@gmail.com"
SMTP_PASSWORD="your-app-password"
SMTP_FROM_EMAIL="noreply@authsystem.com"
SMTP_FROM_NAME="Auth System"
SMTP_USE_TLS=true
SMTP_TIMEOUT=30

# Email Providers (Optional) - Only needed if using specific provider
# SendGrid (for EMAIL_BACKEND=sendgrid)
SENDGRID_API_KEY=""

# Mailgun (for EMAIL_BACKEND=mailgun)
MAILGUN_API_KEY=""
MAILGUN_DOMAIN=""

# AWS SES (for EMAIL_BACKEND=ses)
AWS_REGION=""
AWS_ACCESS_KEY_ID=""
AWS_SECRET_ACCESS_KEY=""

# ===== Login Notifications =====
# Send email notification when user logs in from a new device/IP
SEND_LOGIN_NOTIFICATIONS=false

# ===========================================
# OAuth2 Providers
# ===========================================
GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""
GITHUB_CLIENT_ID=""
GITHUB_CLIENT_SECRET=""

# ===========================================
# URLs
# ===========================================
API_BASE_URL="http://localhost:8080"
FRONTEND_URL="http://localhost:5173"

# ===========================================
# Email Verification
# ===========================================
REQUIRE_EMAIL_VERIFICATION=false
EMAIL_VERIFICATION_EXPIRE_HOURS=24

# ===========================================
# MFA/2FA Configuration
# ===========================================
MFA_ISSUER_NAME="Auth System"
MFA_BACKUP_CODES_COUNT=10

# ===========================================
# Session Management
# ===========================================
SESSION_MAX_DEVICES=10
SESSION_INACTIVITY_TIMEOUT_DAYS=30

# ===========================================
# Account Security
# ===========================================
MAX_LOGIN_ATTEMPTS=5
ACCOUNT_LOCKOUT_DURATION_MINUTES=30

# ===========================================
# Passwordless Authentication (Magic Links)
# ===========================================
MAGIC_LINK_EXPIRE_MINUTES=15
MAGIC_LINK_RATE_LIMIT=2

# ===========================================
# API Keys & Personal Access Tokens
# ===========================================
API_KEY_DEFAULT_EXPIRE_DAYS=365
API_KEY_MAX_PER_USER=20

# ===========================================
# WebAuthn / Passkeys Configuration
# ===========================================
WEBAUTHN_RP_NAME="Auth System"
WEBAUTHN_RP_ID="localhost"
WEBAUTHN_ORIGIN="http://localhost:5173"

# ===========================================
# SSO - SAML 2.0 Configuration
# ===========================================
SAML_ENABLED=false
SAML_ENTITY_ID=""
SAML_IDP_METADATA_URL=""
SAML_SP_X509_CERT=""
SAML_SP_PRIVATE_KEY=""

# ===========================================
# SSO - OIDC (OpenID Connect) Configuration
# ===========================================
OIDC_ENABLED=false
OIDC_ISSUER=""
OIDC_CLIENT_ID=""
OIDC_CLIENT_SECRET=""
OIDC_REDIRECT_URI=""

# ===========================================
# SSO - LDAP / Active Directory Configuration
# ===========================================
LDAP_ENABLED=false
LDAP_SERVER=""
LDAP_PORT=389
LDAP_USE_SSL=false
LDAP_BIND_DN=""
LDAP_BIND_PASSWORD=""
LDAP_BASE_DN=""
LDAP_USER_FILTER="(uid={username})"

# ===========================================
# Monitoring & Error Tracking
# ===========================================
SENTRY_DSN=""

# ===========================================
# NOTES
# ===========================================
# 1. JWT_SECRET: Generate with: openssl rand -hex 32
# 2. SMTP Gmail: Use App Password (https://support.google.com/accounts/answer/185833)
# 3. OAuth2 Credentials:
#    - Google: https://console.cloud.google.com/apis/credentials
#    - GitHub: https://github.com/settings/developers
# 4. WebAuthn RP_ID: Must match domain without port (localhost or example.com)
# 5. Production: Set DEBUG=false, ENVIRONMENT="production", enable HTTPS
# 6. Email Verification: Set REQUIRE_EMAIL_VERIFICATION=true for production

